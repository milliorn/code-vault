/*
ADVANCED CSS GRID

Align Content

In the previous exercise, we positioned grid items within their rows. align-content positions the rows along the column axis, or from top to bottom.

It accepts these positional values:

start — aligns the grid to the top of the grid container

end — aligns the grid to the bottom of the grid container

center — centers the grid vertically in the grid container

stretch — stretches the grid items to increase the size of the grid to expand vertically across the container

space-around — includes an equal amount of space on each side of a grid element, resulting in double the amount of space between elements as there is before the first and after the last element

space-between — includes an equal amount of space between grid items and no space at either end

space-evenly — places an even amount of space between grid items and at either end

There are several other values that align-content accepts, which you can read about on the Mozilla Developer Network. The definitions for these values can also be found in the documentation. It is important to note that the page with the definitions includes some values that are not accepted in CSS Grid layout.

<main>
  <div class="top">Top</div>
  <div class="bottom">Bottom</div>
</main>

main {
  display: grid;
  height: 600px;
  rows: 200px 200px;
  grid-template-areas: "top"
                       "bottom"; 
  align-content: center;
}

In the example above, the grid container is 600 pixels tall, but we only specified two rows that are 200 pixels each. This will leave 200 pixels of unused space in the grid container.
align-content: center; positions the rows in the center of the grid, leaving 100 pixels at the top and 100 pixels at the bottom of the grid.

This property is declared on grid containers.
*/

header, footer {
  background-color: #ffa500;
  text-align: center;
  min-width: 500px;
}

main {
  display: grid;
  grid-template-columns: 250px 250px;
  grid-template-rows: repeat(3, 450px);
  grid-gap: 20px;
  margin-top: 44px;
  grid-auto-rows: 500px;
  justify-items: center;
  justify-content: center;
  align-items: stretch;
  height: 1600px;
  align-content: center;
}

h2 {
  font-family: Poppins;
  font-size: 18px;
  font-weight: 600;
  letter-spacing: 0.3px;
  text-align: left;
  color: #ffa500;
  padding: 10px 0px 10px 10px;
}

img {
  width: 100%;
  height: auto;
}

.recipe {
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.5);
  width: 200px;
}

.a {
  
}

.c {
  
}

.time {
  padding-left: 10px;
  padding-top: 10px;
  width: 20px;
  height: auto;
}

.mins {
  display: inline-block;
  font-family: Poppins;
  font-size: 14px;
  font-weight: 500;
  letter-spacing: 0.3px;
  text-align: left;
  color: #4a4a4a;
  position: relative;
  bottom: 5px;
}

.description {
  font-family: Work Sans;
  font-size: 14px;
  font-weight: 300;
  line-height: 1.29;
  letter-spacing: 0.1px;
  text-align: left;
  color: #4a4a4a;
  padding: 10px 0px 10px 10px;
  border-top: 1px solid #4a4a4a;
}

.logo {
  width: 115px;
  height: 21.1px;
  object-fit: contain;
  padding: 20px;
}

.container {
  min-width: 500px;
  margin: auto;
}

footer {
  margin-top: 44px;
}
